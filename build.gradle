buildscript {
    ext {
        kotlinVersion = '1.5.21'
        jvmVersion = '1.8'
    }

    repositories {
        maven {
            url "https://repo1.maven.org/maven2"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.36.0'
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'kotlin'
    apply plugin: 'java-library'

    version = '3.2.1-SNAPSHOT'
    sourceCompatibility = jvmVersion
    targetCompatibility = jvmVersion

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = jvmVersion
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = jvmVersion
        }
    }

    repositories {
        maven {
            url "https://repo1.maven.org/maven2"
        }
    }

    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        api "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

        testImplementation 'org.junit.platform:junit-platform-launcher:1.7.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
        testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlinVersion"
        testImplementation 'org.assertj:assertj-core:3.18.1'
    }

    test {
        useJUnitPlatform()
    }

    task javadocJar(type: Jar) {
        archiveClassifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
                }

                pom.project {
                    packaging = 'jar'

                    url ='https://github.com/codecentric/hikaku'

                    scm {
                        connection = 'scm:git:git://github.com/codecentric/hikaku.git'
                        developerConnection = 'scm:git:ssh://git@github.com:codecentric/hikaku.git'
                        url = 'https://github.com/codecentric/hikaku'
                    }

                    licenses {
                        license {
                            name = 'Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0'
                        }
                    }

                    developers {
                        developer {
                            id = 'cc-jhr'
                            name = 'Jannes Heinrich'
                            email = '34243889+cc-jhr@users.noreply.github.com'
                        }
                        developer {
                            id = 'lmller'
                            name = 'Lovis MÃ¶ller'
                            email = 'lovis.moeller@codecentric.de'
                        }
                    }
                }
            }
        }
    }
}
